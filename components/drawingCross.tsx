'use client';

import { cn } from "@/lib/utils";

const pathLength = 5000;

const speed = 2;

function DrawingCross({ className, delay = 0 }: { className?: string, delay?: number }) {
  return (
    <>
      <style jsx>{`
        #cross-path {
          /* 1) path 전체 길이에 맞춰 dasharray, dashoffset 설정 */
          stroke-dasharray: ${pathLength}; /* path 길이에 맞춰 설정 (예시값) */
          stroke-dashoffset: ${pathLength}; /* stroke-dasharray와 동일하게 시작 */
          animation: draw ${speed}s ease-in-out forwards;
          animation-delay: ${delay}s;
        }
        @keyframes draw {
          to {
            /* 2) stroke-dashoffset을 0으로 만들어 선이 나타나게 함 */
            stroke-dashoffset: 0;
          }
        }
      `}</style>
      <svg
        id="cross-path"
        width="110" height="51" viewBox="0 0 110 51" fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={cn(
          // Block comment: SVG container styles
          "relative", // Positioning
          "overflow-hidden", // Hide overflow
          className // Custom className
        )}
      >
        

<path d="M12.0512 43.2059C12.1871 42.1182 13.825 41.3798 14.5964 40.8457C20.3676 36.8503 26.7157 33.7647 33.0611 30.8036C49.3361 23.2086 65.4704 14.6366 82.2076 8.12766C86.2894 6.5403 90.7702 5.58532 93.0365 1.55628C93.5214 0.694284 93.7524 1.39573 93.1753 1.97277C90.7626 4.38552 86.3842 5.86185 83.4571 7.24839C70.0468 13.6006 56.3776 19.1339 43.1958 25.9444C38.2388 28.5056 33.0537 31.6823 27.5078 32.7009C22.2001 33.6758 17.199 33.8714 12.19 36.1255C12.0804 36.1748 9.89371 37.4351 11.2182 37.3749C17.0928 37.1079 23.4682 34.0234 29.0812 32.4695C41.8349 28.9389 54.5774 25.5065 67.2138 21.5481C78.2287 18.0976 90.5628 15.3312 100.719 9.60854C102.999 8.32368 113.05 3.11958 105.531 5.53613C97.9005 7.98891 90.4495 10.8695 82.7629 13.2182C74.7855 15.6557 66.8403 18.3168 59.0227 21.2241C51.373 24.0691 42.5695 26.5657 35.9303 31.4977C32.9026 33.7469 31.2496 36.2508 27.369 36.5882C22.7134 36.9931 18.2929 38.7538 13.6246 39.0872C10.6681 39.2984 8.12113 40.147 5.38722 41.1234C4.527 41.4306 -0.180779 43.4164 2.61058 41.1697C5.58579 38.775 8.68199 37.7915 12.3751 36.8196C22.9631 34.0333 33.5567 31.4982 43.9825 28.1195C46.4475 27.3206 53.0396 23.7515 55.8758 24.6024C56.6626 24.8384 54.7529 25.6911 54.5338 25.7131C52.3553 25.9309 49.725 27.4652 47.8698 25.7131C44.7187 22.737 40.892 20.5565 37.3186 18.1236C32.7962 15.0445 18.8725 6.71169 22.7412 10.5804C29.5675 17.4066 37.5113 21.8085 46.2964 25.7131C54.7684 29.4784 81.4258 37.2286 72.3043 35.5701C70.1279 35.1744 67.774 32.7333 66.0105 31.544C58.6429 26.5751 51.4673 21.269 43.7049 16.9204C38.0955 13.7779 20.401 6.08426 26.3971 8.40532C41.2334 14.1484 53.5954 25.5844 67.0286 33.8579C70.4421 35.9602 75.1875 39.8739 79.5235 39.8739C80.8056 39.8739 76.11 37.7055 76.099 37.6989C70.5754 34.3617 64.8911 31.2248 59.4854 27.703C51.931 22.7812 44.8635 17.6166 39.0771 10.6729C36.1797 7.19597 32.9455 3.72475 28.4333 2.43555C28.0452 2.32465 29.5577 4.33513 29.6365 4.42547C33.3336 8.66166 38.0078 12.4441 42.4091 15.9023C58.6483 28.6617 76.878 39.8007 95.3504 49.0368"
          strokeWidth="3"
          strokeLinecap="round"
          className={cn(
            // Block comment: Path animation styles
            "stroke-dasharray-${pathLength}", // Set dasharray
            "stroke-dashoffset-${pathLength}", // Set dashoffset
            "animate-draw" // Apply animation
          )}
        />
      </svg>
    </>
  );
}

export default DrawingCross;